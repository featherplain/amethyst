@charset "utf-8";

//----------------------------------------------------------------------------
// hasPseudoClass
// $name
//----------------------------------------------------------------------------
@mixin hasPseudoClass($loc:false, $position: absolute){
  position: relative;
  @if $loc == before{
    &:before{
      display: block;
      content: "";
      position: $position;
    }
  }@else if $loc == after{
    &:after{
      display: block;
      content: "";
      position: $position;
    }
  }@else{
    &:before,
    &:after{
      display: block;
      content: "";
      position: $position;
    }
  }
}

//----------------------------------------------------------------------------
// imgReplace
// @param $name
//----------------------------------------------------------------------------
@mixin imgReplace($path, $imgWidth, $imgHeight, $scale: 1, $position: 0 0, $size: 100%, $repeat: no-repeat){
  display: block;
  overflow: hidden;
  padding-top: $imgHeight * $scale;
  width: $imgWidth * $scale;
  height: 0;
  background-image: url($filePath + $path);
  background-position: $position;
  background-size: $size;
  background-repeat: $repeat;
}

//----------------------------------------------------------------------------
// Sprite css image replacement (Medium size)
// @param $name
//----------------------------------------------------------------------------
@mixin sprite-ir($sprite, $scale: 1, $display: block){
  @include sprite-image($sprite);
  $sprite-offset-x: nth($sprite, 3) * $scale;
  $sprite-offset-y: nth($sprite, 4) * $scale;
  background-position: $sprite-offset-x  $sprite-offset-y;
  display: $display;
  overflow: hidden;
  padding-top: nth($sprite, 6) * $scale;
  width: nth($sprite, 5) * $scale;
  height: 0;
  background-repeat: no-repeat;
  background-size: nth($sprite, 7) * $scale nth($sprite, 8) * $scale;
}


//----------------------------------------------------------------------------
// web font
//----------------------------------------------------------------------------
// use genericon
@mixin genericon($content:'\f100', $fontsize: 16px, $valaign: text-bottom, $position: static, $display: inline-block, $line-height: 1em){
  position: $position;
  display: $display;
  content: $content;
  vertical-align: $valaign;
  font-size: $fontsize;
  font-family: Genericons;
  line-height: $line-height;
}
// use font-awesome
@mixin fa($content: '', $fontsize: 16px, $valaign: baseline){
  display: inline-block;
  content: $content;
  vertical-align: $valaign;
  text-decoration: inherit;
  font-weight: normal;
  font-style: normal;
  font-size: $fontsize;
  font-family: FontAwesome;
  -webkit-font-smoothing: antialiased;
}

//----------------------------------------------------------------------------
// css graphic
//----------------------------------------------------------------------------
// Triangle
@mixin triangle($direction, $width, $height, $color) {
  width: 0;
  height: 0;
  @if $direction == 'up' {
    border-right: $height / 2 solid transparent;
    border-bottom: $width solid $color;
    border-left: $height / 2 solid transparent;
  } @else if $direction == 'down' {
    border-top: $width solid $color;
    border-right: $height / 2 solid transparent;
    border-left: $height / 2 solid transparent;
  } @else if $direction == 'left' {
    border-top: $height / 2 solid transparent;
    border-right: $width solid $color;
    border-bottom: $height / 2 solid transparent;
  } @else if $direction == 'right' {
    border-top: $height / 2 solid transparent;
    border-bottom: $height / 2 solid transparent;
    border-left: $width solid $color;
  }
}

@mixin corner-triangle($corner, $size, $color) {
  width: 0;
  height: 0;
  @if $corner == 'top-left' {
    border-top: $size solid $color;
    border-right: $size solid transparent;
  } @else if $corner == 'top-right' {
    border-top: $size solid $color;
    border-left: $size solid transparent;
  } @else if $corner == 'bottom-left' {
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  } @else if $corner == 'bottom-right' {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  }
}

//----------------------------------------------------------------------------
// button
// $name
//----------------------------------------------------------------------------

// Variables
// $buttonRadius: $baseRadius;

// @mixin btnBase() {
//   display: inline-block;
//   margin: 1rem 0;
//   padding: 0.875rem 1.75rem 0.9375rem 1.75rem;
//   text-align: center;
//   &:focus {
//     outline: 0;
//   }
//   &:hover,
//   &:active,
//   &:focus {
//     outline: 0;
//     text-decoration: none;
//   }
// }

// @mixin btn($colorBg, $color, $fontSize, $fullWidth: false, $boxShadow: false, $radius: false) {
//   @include btnBase;
//   background-color: $colorBg;
//   color: $color;
//   font-size: $fontSize;
//   transition: background-color 300ms ease-out;
//   // set $fullWidth
//   @if $fullWidth {
//     width: 100%;
//   }
//   // box shadow
//   @if $boxShadow {
//     box-shadow: 0 3px 0 darken($colorBg, 6%);
//   }
//   // radius
//   @if $radius {
//     border-radius: $baseRadius;
//   }
//   &:visited {
//     color: $color;
//   }
//   &:hover,
//   &:active,
//   &:focus {
//     background-color: darken($colorBg, 7%);
//     color: $color;
//   }
// }

// @mixin btnGhost($color, $colorHover, $fontSize, $fullWidth: false, $radius: false) {
//   @include btnBase;
//   background-color: transparent;
//   border: 2px solid $color;
//   color: $color;
//   font-size: $fontSize;
//   transition: 0.3s;
//   // set $fullWidth
//   @if $fullWidth {
//     width: 100%;
//   }
//   // set border-radius
//   @if $radius {
//     border-radius: $buttonRadius;
//   }
//   &:link,
//   &:visited {
//     color: $color;
//   }
//   &:hover,
//   &:active,
//   &:focus {
//     background-color: $color;
//     color: $colorHover;
//   }
// }

//----------------------------------------------------------------------------
// WordPress editor styles
//----------------------------------------------------------------------------
@mixin wp-editor-styles {

  * {
    margin: $wp-editor-margin;
  }

  h1 {}
  h2 {}
  h3 {}
  h4 {}
  h5 {}
  h6 {}

  // set font size from h1 to h6
  @for $i from 1 through 6 {
    h#{$i} {
      font-size: #{28 - $i*2}px;
    }
  }

  p {}

  a {}

  dl {
    dt {}
    dd {}
  }

  ul, ol {
  }

  ul {
    li {}
  }

  ol {
    li {}
  }

  blockquote {
    > * {}
  }

  pre {
    >code {}
  }
  code {}

  kbd {}

  table {
    thead {}
    tbody {}
    tr {}
    th {}
    td {}
  }
}
